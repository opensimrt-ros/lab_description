{
  "keys": {},
  "groups": {
    "mainwindow": {
      "keys": {
        "geometry": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'01d9d0cb00030000000007800000001b00000eff00000437000007800000003500000eff0000043700000000000000000780000007800000003500000eff00000437')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "           7   5   7        5   7"
        },
        "state": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000000fd00000002000000020000053700000325fc0100000001fb00000026007200710074005f007200760069007a005f005f005200560069007a005f005f0031005f005f01000000000000053700000000000000000000000300000780000003d9fc0100000006fb00000050007200710074005f0070006f00730065005f0076006900650077005f005f0050006f007300650056006900650077005f005f0031005f005f0047004c00560069006500770057006900640067006500740100000000000004c80000000000000000fc00000000000002680000023e00fffffffa000000000100000002fb00000044007200710074005f00670072006100700068005f005f0052006f007300470072006100700068005f005f0031005f005f0052006f007300470072006100700068005500690100000000ffffffff0000023e00fffffffb0000004c007200710074005f00740066005f0074007200650065005f005f0052006f0073005400660054007200650065005f005f0031005f005f0052006f0073005400660054007200650065005500690100000000000002c50000018b00fffffffc0000026e000001290000011300fffffffa000000000200000002fb00000022007200710074005f0074006f0070005f005f0054004f0050005f005f0031005f005f0100000000ffffffff000000ae00fffffffb00000042007200710074005f0070006c006f0074005f005f0050006c006f0074005f005f0031005f005f00440061007400610050006c006f007400570069006400670065007401000000c8000003250000008800fffffffb00000042007200710074005f006e00610076005f0076006900650077005f005f004e0061007600690067006100740069006f006e0056006900650077005f005f0031005f005f0100000451000000e60000000000000000fc0000039d000001f2000001dc00fffffffc0200000002fc0000001400000214000000aa00fffffffa000000000200000002fb00000062007200710074005f0072006f0062006f0074005f006d006f006e00690074006f0072005f005f0052006f0062006f0074004d006f006e00690074006f0072005f005f0031005f005f0052006f0062006f00740020004d006f006e00690074006f00720100000000ffffffff000000aa00fffffffb00000072007200710074005f0073006500720076006900630065005f00630061006c006c00650072005f005f005300650072007600690063006500430061006c006c00650072005f005f0031005f005f005300650072007600690063006500430061006c006c006500720057006900640067006500740100000014000003250000000000000000fb00000072007200710074005f0073006500720076006900630065005f00630061006c006c00650072005f005f005300650072007600690063006500430061006c006c00650072005f005f0032005f005f005300650072007600690063006500430061006c006c00650072005700690064006700650074010000022e000001bf000000fe00fffffffb00000034007200710074005f006200610067005f005f004200610067005f005f0031005f005f0042006100670057006900640067006500740100000595000001eb000001c800ffffff000007800000000000000004000000040000000800000008fc00000001000000030000000100000036004d0069006e0069006d0069007a006500640044006f0063006b00570069006400670065007400730054006f006f006c0062006100720000000000ffffffff0000000000000000')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "                 &rqt_rviz__RViz__1__                   Prqt_pose_view__PoseView__1__GLViewWidget            h >                                                 >                                                                  \"rqt_top__TOP__1__          Brqt_plot__Plot__1__DataPlotWidget          Brqt_nav_view__NavigationView__1__                                   brqt_robot_monitor__RobotMonitor__1__Robot Monitor          rrqt_service_caller__ServiceCaller__1__ServiceCallerWidget          rrqt_service_caller__ServiceCaller__2__ServiceCallerWidget          4rqt_bag__Bag__1__BagWidget                            6MinimizedDockWidgetsToolbar        "
        }
      },
      "groups": {
        "toolbar_areas": {
          "keys": {
            "MinimizedDockWidgetsToolbar": {
              "repr": "8",
              "type": "repr"
            }
          },
          "groups": {}
        }
      }
    },
    "pluginmanager": {
      "keys": {
        "running-plugins": {
          "repr": "{'rqt_bag/Bag': [1], 'rqt_graph/RosGraph': [1], 'rqt_plot/Plot': [1], 'rqt_robot_monitor/RobotMonitor': [1], 'rqt_service_caller/ServiceCaller': [2], 'rqt_tf_tree/RosTfTree': [1], 'rqt_top/TOP': [1]}",
          "type": "repr"
        }
      },
      "groups": {
        "plugin__rqt_bag__Bag__1": {
          "keys": {},
          "groups": {
            "dock_widget__BagWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Bag'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_graph__RosGraph__1": {
          "keys": {},
          "groups": {
            "dock_widget__RosGraphUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Node Graph'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "actionlib_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "auto_fit_graph_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "dead_sinks_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "filter_line_edit_text": {
                  "repr": "'/'",
                  "type": "repr"
                },
                "graph_type_combo_box_index": {
                  "repr": "0",
                  "type": "repr"
                },
                "group_image_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "group_tf_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "hide_dynamic_reconfigure_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "hide_tf_nodes_check_box_state": {
                  "repr": "False",
                  "type": "repr"
                },
                "highlight_connections_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "leaf_topics_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "namespace_cluster_spin_box_value": {
                  "repr": "2",
                  "type": "repr"
                },
                "quiet_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "topic_filter_line_edit_text": {
                  "repr": "'/'",
                  "type": "repr"
                },
                "unreachable_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_plot__Plot__1": {
          "keys": {},
          "groups": {
            "dock_widget__DataPlotWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'MatPlot'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "autoscroll": {
                  "repr": "True",
                  "type": "repr"
                },
                "plot_type": {
                  "repr": "1",
                  "type": "repr"
                },
                "topics": {
                  "repr": "''",
                  "type": "repr"
                },
                "x_limits": {
                  "repr": "[0.0, 1.0]",
                  "type": "repr"
                },
                "y_limits": {
                  "repr": "[0.0, 1.0]",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_pose_view__PoseView__1": {
          "keys": {},
          "groups": {
            "plugin": {
              "keys": {
                "view_matrix": {
                  "repr": "'[[0.6964382529258728, 0.2258615344762802, -0.6811465620994568, 0.0], [-0.7068039178848267, 0.05174257978796959, -0.705514132976532, 0.0], [-0.12410418689250946, 0.9727842211723328, 0.1956753134727478, 0.0], [0.0, -3.0, -17.5, 1.0]]'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_robot_monitor__RobotMonitor__1": {
          "keys": {},
          "groups": {
            "dock_widget__Robot Monitor": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Robot Monitor'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000001000000030000006400000064000000c80100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       d d       "
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_rviz__RViz__1": {
          "keys": {},
          "groups": {
            "plugin": {
              "keys": {
                "hide_menu": {
                  "repr": "False",
                  "type": "repr"
                },
                "rviz_config_file": {
                  "repr": "'/opt/ros/noetic/share/rviz/default.rviz'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_service_caller__ServiceCaller__1": {
          "keys": {},
          "groups": {
            "plugin": {
              "keys": {
                "current_service_name": {
                  "repr": "'/rosout/get_loggers'",
                  "type": "repr"
                },
                "splitter_orientation": {
                  "repr": "2",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_service_caller__ServiceCaller__2": {
          "keys": {},
          "groups": {
            "dock_widget__ServiceCallerWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Service Caller (2)'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "current_service_name": {
                  "repr": "'/rosout/get_loggers'",
                  "type": "repr"
                },
                "splitter_orientation": {
                  "repr": "2",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_tf_tree__RosTfTree__1": {
          "keys": {},
          "groups": {
            "dock_widget__RosTfTreeUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'TF Tree'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "auto_fit_graph_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                },
                "highlight_connections_check_box_state": {
                  "repr": "True",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_top__TOP__1": {
          "keys": {},
          "groups": {
            "dock_widget__": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Process Monitor'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "filter_text": {
                  "repr": "''",
                  "type": "repr"
                },
                "is_regex": {
                  "repr": "0",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        }
      }
    }
  }
}